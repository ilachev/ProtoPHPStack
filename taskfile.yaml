version: '3'

vars:
  PROTO_DIR: protos/proto
  GEN_DIR: protos/gen
  PHP: php
  COMPOSER: composer

tasks:
  install:
    cmd: "{{.COMPOSER}} install"
    sources:
      - composer.json
    generates:
      - vendor/autoload.php

  var:
    cmd: mkdir -p var
    status:
      - test -d var
    silent: true
    internal: true

  fixcs:
    deps: [ var, install ]
    cmds:
      - "PHP_CS_FIXER_IGNORE_ENV=true {{.PHP}} vendor/bin/php-cs-fixer fix --verbose {{.CLI_ARGS}}"

  lint:
    cmds:
      - task: fixcs
        vars:
          CLI_ARGS: "--dry-run {{.CLI_ARGS}}"

  verify:
    deps: [ var, install, phpstan, test ]

  phpstan:
    deps: [ var, install ]
    cmds:
      - "{{.PHP}} vendor/bin/phpstan analyse {{.CLI_ARGS}}"

  test:
    deps: [ var, install ]
    cmds:
      - "{{.PHP}} vendor/bin/phpunit --colors=always {{.CLI_ARGS}}"

  proto:gen:
    desc: Generate PHP classes from proto files
    cmds:
      - rm -rf {{.GEN_DIR}}/*
      - >
        protoc -I={{.PROTO_DIR}}
        --php_out={{.GEN_DIR}}
        --php_opt=aggregate_metadata
        {{.PROTO_DIR}}/app/v1/*.proto
        {{.PROTO_DIR}}/google/api/*.proto

  perf:test:
    deps: [ var, install ]
    cmds:
      - k6 run load-tests/scenarios/{{.CLI_ARGS | default "home.js"}}

  perf:test:all:
    deps: [ var, install ]
    cmds:
      - for f in load-tests/scenarios/*.js; do k6 run "$f"; done
